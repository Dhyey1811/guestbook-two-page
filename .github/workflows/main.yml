# .github/workflows/main.yml
name: Main Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: { node-version: 18 }

      - name: Backend tests (coverage)
        working-directory: backend
        run: |
          npm ci
          npm test -- --coverage

      # 🔐 Configure AWS creds FIRST (for backend init/apply + aws cli later)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        working-directory: infra/terraform
        run: terraform init -input=false

      - name: Terraform apply
        working-directory: infra/terraform
        run: terraform apply -auto-approve -input=false

      - name: Read outputs
        id: tfout
        working-directory: infra/terraform
        run: |
          echo "API_URL=$(terraform output -raw api_url)" >> $GITHUB_OUTPUT
          echo "BUCKET=$(terraform output -raw site_bucket)" >> $GITHUB_OUTPUT
          echo "DIST_ID=$(terraform output -raw cdn_id)" >> $GITHUB_OUTPUT

      - name: Inject API URL into frontend/config.js
        run: echo "window.API_URL='${{ steps.tfout.outputs.API_URL }}';" > frontend/config.js

      - name: Upload frontend to S3
        run: aws s3 sync frontend "s3://${{ steps.tfout.outputs.BUCKET }}" --delete

      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id "${{ steps.tfout.outputs.DIST_ID }}" --paths "/*"

      - name: Smoke test API
        run: curl -sSf "${{ steps.tfout.outputs.API_URL }}/messages" | head
